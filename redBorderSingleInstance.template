{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "AWS CloudFormation template to deploy redBorder Horama Manager",

	"Parameters" : {
		"AMI" : {
			"Description" : "redBorder AMI ID to deploy", 
			"Type" : "AWS::EC2::Image::Id"
		},
		"InstanceType" : {
			"Description" : "performance of each node (instance types). Instance types will be choosen automatically in function of this parameter",
			"Type" : "String",
			"AllowedValues" : [ "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge" ],
			"Default" : "m4.xlarge"
		},
		"KeyName" : {
			"Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type" : "AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription" : "must be the name of an existing AWS EC2 KeyPair"
		},
		"CDOMAIN" : {
			"Description" : "DNS Domain for cluster",
			"Type" : "String"			
		}
	},

	"Conditions" : {
		"regionNVirginia" : {
			"Fn::Equals" : [ "us-east-1", { "Ref" : "AWS::Region" } ]
		}		
	},
	
	"Resources" : {
		"VPC" : {
			"Type" : "AWS::EC2::VPC",
			"Properties" : {
				"CidrBlock" : "172.16.0.0/16",
				"EnableDnsSupport" : "true",
				"EnableDnsHostnames" : "true",
				"InstanceTenancy" : "default",
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "VPC" ] ] } } ]
			}
		},
		"PublicSubnet" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"CidrBlock" : "172.16.1.0/24",
				"AvailabilityZone" : { "Fn::Select" : [ 0, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "PublicSubnet" ] ] } } ]
			}
		},
		"PrivateSubnet" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"CidrBlock" : "172.16.2.0/24",
				"AvailabilityZone" : { "Fn::GetAtt" : [ "PublicSubnet", "AvailabilityZone" ] },
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "PrivateSubnet" ] ] } } ]
			}
		},
		"InternetGateway" : {
			"Type" : "AWS::EC2::InternetGateway",
			"Properties" : {
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "InternetGateway" ] ] } } ]
			}
		},
		"AttachGateway" : {
			"Type" : "AWS::EC2::VPCGatewayAttachment",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"InternetGatewayId" : { "Ref" : "InternetGateway" }
			}
		},
		"RouteTable" : {
			"Type" : "AWS::EC2::RouteTable",
			"Properties" : {
				"VpcId" : { "Ref" : "VPC" },
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "RouteTable" ] ] } } ]
			}
		},
		"Route" : {
			"Type" : "AWS::EC2::Route",
			"DependsOn" : "AttachGateway",
			"Properties" : {
				"RouteTableId" : { "Ref" : "RouteTable" },
				"DestinationCidrBlock" : "0.0.0.0/0",
				"GatewayId" : { "Ref" : "InternetGateway" }
			}
		},
		"PublicSubnetRouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"SubnetId" : { "Ref" : "PublicSubnet" },
				"RouteTableId" : { "Ref" : "RouteTable" }
			}
		},
		"IAMRole" : {
			"Type" : "AWS::IAM::Role",
			"Properties" : {
				"AssumeRolePolicyDocument" : {
					"Version" : "2012-10-17",
					"Statement" : [ {
						"Effect" : "Allow",
						"Principal" : {
							"Service" : [ "ec2.amazonaws.com" ]
						},
						"Action" : [ "sts:AssumeRole" ]
					} ]
				},
				"Path" : "/"
			}
		},
		"IAMInstanceProfile" : {
			"Type" : "AWS::IAM::InstanceProfile",
			"Properties" : {
				"Path" : "/",
				"Roles" : [ { "Ref" : "IAMRole" } ]
			}
		},
		"IAMUser" : {
			"Type" : "AWS::IAM::User",
			"Properties" : { }
		},
		"IAMAccessKey" : {
			"Type" : "AWS::IAM::AccessKey",
			"Properties" : {
				"Status" : "Active",
				"UserName" : { "Ref" : "IAMUser" }
			}
		},
		"IAMPolicy" : {
			"Type" : "AWS::IAM::ManagedPolicy",
			"Properties" : {
				"PolicyDocument" : {
					"Version" : "2012-10-17",
					"Statement": [ {
						"Action" : [
							"ec2:DescribeInstances",
							"ec2:AssignPrivateIpAddresses",
							"ec2:UnassignPrivateIpAddresses",
							"ec2:DescribeTags" ],
						"Effect" : "Allow",
						"Resource" : "*"
					}, {
						"Action" : "s3:*",
						"Effect" : "Allow",
						"Resource" : [ { "Fn::Join" :
							[ "", [ "arn:aws:s3:::",
							{ "Ref" : "S3Bucket" }, "/*" ] ] },
							{ "Fn::Join" :
							[ "", [ "arn:aws:s3:::",
							{ "Ref" : "S3Bucket" } ] ] } ]
					}, {
						"Effect": "Allow",
						"Action": [ "cloudformation:DescribeStackResource" ],
						"Resource": { "Fn::Join" : [ "", [ "arn:aws:cloudformation:", { "Ref" : "AWS::Region" }, ":",
									{ "Ref" : "AWS::AccountId" }, ":stack/", { "Ref" : "AWS::StackName" }, "/*"   ] ] }
					},{
						"Effect": "Allow",
						"Action" : [ "cloudwatch:PutMetricData" ],
						"Resource" : "*"
					},{
						"Effect": "Allow",
						"Action" : [ "route53:ListHostedZones", "route53:ChangeResourceRecordSets", "route53:GetHostedZone" ],
						"Resource" : "*"
					} ]
				},
				"Roles" :  [ { "Ref" : "IAMRole" } ],
				"Users" : [ { "Ref" : "IAMUser" } ]
			}
		},
		"IAMUserChef" : {
			"Type" : "AWS::IAM::User",
			"Properties" : { }
		},
		"IAMAccessKeyChef" : {
			"Type" : "AWS::IAM::AccessKey",
			"Properties" : {
				"Status" : "Active",
				"UserName" : { "Ref" : "IAMUserChef" }
			}
		},
		"IAMPolicyChef" : {
			"Type" : "AWS::IAM::Policy",
			"Properties" : {
				"PolicyName" : "RB-CF-POLICY",
				"PolicyDocument" : {
					"Version" : "2012-10-17",
					"Statement": [ {
						"Action" : "s3:*",
						"Effect" : "Allow",
						"Resource" : [ { "Fn::Join" :
							[ "", [ "arn:aws:s3:::",
							{ "Ref" : "S3Bucket" },
							"/organization-00000000000000000000000000000000/*" ] ] } ]
					} ]
				},
				"Users" : [ { "Ref" : "IAMUserChef" } ]
			}
		},
		"S3Bucket" : {
			"Type" : "AWS::S3::Bucket",
			"Properties" : {
				"AccessControl" : "Private"
			},
			"DeletionPolicy" : "Retain"
		},
		"S3BucketPolicy" : {
			"Type" : "AWS::S3::BucketPolicy",
			"Properties" : {
				"Bucket" : { "Ref" : "S3Bucket" },
				"PolicyDocument" : {
					"Statement" : [ {
						"Effect" : "Allow",
						"Principal" : "*",
						"Action" : [ "s3:GetObject" ],
						"Resource" : { "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref" : "S3Bucket" },
							 "/Public/*" ] ] }
					} ]
				}
			}
		},
		"redBorderPublicSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Security group for redBorder bond0 interfaces (public interfaces)",
				"VpcId" : { "Ref" : "VPC" },
				"SecurityGroupIngress" : [ {
					"IpProtocol" : "tcp",
					"FromPort" : "22",
					"ToPort" : "22",
					"CidrIp" : "0.0.0.0/0"
				}, {
					"IpProtocol" : "tcp",
					"FromPort" : "80",
					"ToPort" : "80",
					"CidrIp" : "0.0.0.0/0"
				}, {
					"IpProtocol" : "tcp",
					"FromPort" : "443",
					"ToPort" : "7979",
					"CidrIp" : "0.0.0.0/0"
				} ],
				"Tags" : [  {
					"Key" : "Name",
					"Value" : { "Fn::Join" : [ "", [
						{ "Ref" : "AWS::StackName" }, " - rBPublicSG" ] ] }
				} ]
			}
		},

		"redBorderPrivateSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Security group for redBorder bond1 interfaces (private interfaces)",
				"VpcId" : { "Ref" : "VPC" },
				"Tags" : [ {
					"Key" : "Name",
					"Value" : { "Fn::Join" : [ "", [
						{ "Ref" : "AWS::StackName" }, " - rBPrivateSG" ] ] }
				} ]
			}
		},
		"redBorderPrivateSecurityGroupIngress" : {
			"Type" : "AWS::EC2::SecurityGroupIngress",
			"Properties" : {
				"GroupId" : { "Ref" : "redBorderPrivateSecurityGroup" },
				"IpProtocol" : "-1",
				"FromPort" : "-1",
				"ToPort" : "-1",
				"SourceSecurityGroupId" : { "Ref" : "redBorderPrivateSecurityGroup" }
			}
		},

		"PublicHostedZone" : {
			"Type" : "AWS::Route53::HostedZone",
			"Properties" : {
				"HostedZoneConfig" : {
					"Comment" : { "Fn::Join" : [ "", [ "Public Hosted Zone for stack ", { "Ref" : "AWS::StackName" } ] ] }
				},
				"Name" : { "Fn::Join" : [ "", [ { "Ref" : "CDOMAIN" }, "." ] ] }
			}
		},

		"WebDNSName" : {
			"Type" : "AWS::Route53::RecordSet",
			"Properties" : {
				"HostedZoneId" : { "Ref" : "PublicHostedZone" },
				"Name" : { "Ref" : "CDOMAIN" },
				"Type" : "A",
				"ResourceRecords" : [ { "Ref" : "ElasticIP" } ],
				"TTL" : "300"
			}
		},

		"DataDNSName" : {
			"Type" : "AWS::Route53::RecordSet",
			"Properties" : {
				"HostedZoneId" : { "Ref" : "PublicHostedZone" },
				"Name" : { "Fn::Join" : [ "", [ "data.", { "Ref" : "CDOMAIN" } ] ] },
		  		"Type" : "A",
                "ResourceRecords" : [ { "Ref" : "ElasticIP" } ],
				"TTL" : "300"
			}
		},

        "redBorderInstance" : {
            "Type" : "AWS::EC2::Instance",
			"Properties" : {
				"SubnetId" :  { "Ref": "PublicSubnet" },
				"ImageId" : { "Ref" : "AMI" },
				"KeyName"        : { "Ref" : "KeyName" },
				"InstanceType"   : { "Ref" : "InstanceType" },
				"IamInstanceProfile" : { "Ref" : "IAMInstanceProfile" },
				"SecurityGroupIds" : [ { "Ref" : "redBorderPublicSecurityGroup" } ],
				"BlockDeviceMappings" : [ {
					"DeviceName" : "/dev/sda1",
					"Ebs" : {
						"VolumeSize" : "500",
						"VolumeType" : "gp2",
						"DeleteOnTermination" : "true"
					}
				},  {
					"DeviceName" : "/dev/sdb",
					"VirtualName" : "ephemeral0"
				},  {
					"DeviceName" : "/dev/sdc",
					"VirtualName" : "ephemeral1"
				} ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#!/bin/bash\n",
					"NODEROLE=master\n",
					"MODULES=\"flow:true location:true ips:true monitor:true malware:false social:true\"\n",
					"#NODESERVICES=\n",
					"CDOMAIN=", { "Ref" : "CDOMAIN" }, "\n",
					"PUBLIC_HOSTEDZONE_ID=", { "Ref" : "PublicHostedZone" }, "\n",
					"REGION=", { "Ref" : "AWS::Region" }, "\n",
					"VPCID=", { "Ref" : "VPC" }, "\n",
					"PRIVATE_SECURITY_GROUP=", { "Ref" : "redBorderPrivateSecurityGroup" }, "\n",
					"STACKNAME=", { "Ref" : "AWS::StackName" }, "\n",
					"LOGWATCHG=", { "Ref" : "AWS::StackName" }, "\n",
					"SUBNET_ID=", { "Ref" : "PrivateSubnet" }, "\n",
					"S3BUCKET=", { "Ref" : "S3Bucket" }, " \n",
					{ "Fn::If" : [ "regionNVirginia",
						"S3HOST=s3.amazonaws.com\n",
						{ "Fn::Join" : [ "" , [ "S3HOST=s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com\n" ] ] }
					] },
					"S3TYPE=aws\n",
					"CLOUDDNS=1\n",
					"ROUTE53NAMES=master\n",
					"AWS_ACCESS_KEY=\"", { "Ref" : "IAMAccessKey" }, "\"\n",
					"AWS_SECRET_KEY=\"", { "Fn::GetAtt" : [ "IAMAccessKey", "SecretAccessKey" ] }, "\"\n",
					"CHEF_AWS_ACCESS_KEY=\"", { "Ref" : "IAMAccessKeyChef" }, "\"\n",
					"CHEF_AWS_SECRET_KEY=\"", { "Fn::GetAtt" : [ "IAMAccessKeyChef", "SecretAccessKey" ] }, "\"\n",
					"#ENRICHMODE=samza\n",
					"\n\n",
					"cat > /opt/rb/etc/chef/initialdata.json <<- _RBEOF2_\n",
					"{\n",
					"  \"redBorder\" : {\n",
					"    \"aws\" : {\n",
					"      \"cloudwatch\" : \"true\"\n",
					"    }\n",
					"  }\n",
					"}\n",
					"_RBEOF2_\n",
					"\n"
				] ] } },
				"Tags" : [ {
					"Key" : "Name",
					"Value" : { "Ref" : "AWS::StackName" }
				} ]
            }
        },
		"privateInterface" : {
			"Type" : "AWS::EC2::NetworkInterface",
			"Properties" : {
				"SubnetId" : { "Ref" : "PrivateSubnet" },
				"GroupSet" : [ { "Ref" : "redBorderPrivateSecurityGroup" } ]
			}
		},
		"privateInterfaceAttachment" : {
			"Type": "AWS::EC2::NetworkInterfaceAttachment",
			"DependsOn" : "ElasticIP",
			"Properties" : {
				"DeleteOnTermination" : "true",
				"DeviceIndex" : "1",
				"InstanceId" : { "Ref" : "redBorderInstance" },
				"NetworkInterfaceId" : { "Ref" : "privateInterface" }
			}
		},
		"ElasticIP" : {
			"Type" : "AWS::EC2::EIP",
			"Properties" : {
				"InstanceId" : { "Ref" : "redBorderInstance" },
				"Domain" : { "Ref" : "VPC" }
			}
		}
	}
}
