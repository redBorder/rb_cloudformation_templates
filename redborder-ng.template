{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" :	"AWS CloudFormation template to deploy redBorder NG. Copyright (c) 2016 ENEO Tecnologia S.L. GNU Affero General Public License",


	"Parameters" : {
		"AMI" : {
			"Description" : "AMI ID",
			"Type" : "String",
			"Default" : "ami-7abd0209"
		},
		"InstanceType" : {
			"Description" : "Instance type",
			"Type" : "String",
			"AllowedValues" : [ "t2.micro", "t2.small", "t2.medium", "t2.large",
				"m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge",
				"c4.large",	"c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
				"i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge",
				"d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
				"r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge"
			],
			"Default" : "t2.small",
			"ConstraintDescription" : "must be an allowed instance type"
		},
		"RDSInstanceType" : {
			"Description" : "(CONDITIONAL) Indicates instance size for RDS Database. Only necessary if you choose to use RDS database",
			"Type" : "String",
			"AllowedValues" : [ "db.m4.large", "db.m4.xlarge", "db.m4.2xlarge", "db.m4.4xlarge", "db.m4.10xlarge",
				"db.m3.medium", "db.m3.large", "db.m3.xlarge", "db.m3.2xlarge",
				"db.r3.large", "db.r3.xlarge", "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge",
				"db.t2.micro", "db.t2.small", "db.t2.medium", "db.t2.large"
			],
			"Default" : "db.t2.micro",
			"ConstraintDescription" : "must be an allowed instance type"
		},
		"CoreInstances" : {
			"Description" : "(REQUIRED) minimun number of nodes for corezk role",
			"Type" : "String",
			"AllowedValues" : [ "1", "3", "5"],
			"Default" : "1",
			"ConstraintDescription" : "number of nodes for corezk role must be odd and not greater than 7"
		},
		"ChefInstances" : {
			"Description" : "(REQUIRED) minimun number of nodes for kafka role.",
			"Type" : "Number",
			"MinValue" : "1",
			"MaxValue" : "5",
			"Default" : "1",
			"ConstraintDescription" : "number of nodes must between 0 and 3"
		},
		"KafkaInstances" : {
			"Description" : "(REQUIRED) minimun number of nodes for kafka role.",
			"Type" : "Number",
			"MinValue" : "0",
			"MaxValue" : "5",
			"Default" : "1",
			"ConstraintDescription" : "number of nodes must between 0 and 3"
		},
		"KeyName" : {
			"Description" : "(REQUIRED) Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type" : "AWS::EC2::KeyPair::KeyName",
			"ConstraintDescription" : "must be the name of an existing AWS EC2 KeyPair",
			"Default" : "jenkins"
		},
		"VPCId" : {
			"Description" : "VPC Id",
			"Type" : "String",
			"Default" : ""
		},
		"SubnetId" : {
			"Description" : "Subnet Id",
			"Type" : "String",
			"Default" : ""
		},
		"BackupSubnetId" : {
			"Description" : "Subnet Id",
			"Type" : "String",
			"Default" : ""
		},
		"CDomain" : {
			"Description" : "CDomain of redborder",
			"Type" : "String",
			"Default" : "poc.redborder.com"
		}
	},

	"Conditions" : {
		"CreateVPC" : {
			"Fn::Equals" : [ "", { "Ref" : "VPCId" } ]
		},
		"CreateSubnet" : {
			"Fn::Equals" : [ "", { "Ref" : "SubnetId" } ]
		},
		"CreateBackupSubnet" : {
			"Fn::Equals" : [ "", { "Ref" : "BackupSubnetId" } ]
		}
	},

	"Resources" : {

		"VPC" : {
			"Type" : "AWS::EC2::VPC",
			"Condition" : "CreateVPC",
			"Properties" : {
				"CidrBlock" : "172.16.0.0/16",
				"EnableDnsSupport" : "true",
				"EnableDnsHostnames" : "true",
				"InstanceTenancy" : "default",
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "VPC" ] ] } } ]
			}
		},
		"Subnet" : {
			"Type" : "AWS::EC2::Subnet",
			"Condition" : "CreateSubnet",
			"Properties" : {
				"VpcId" : { "Fn::If" : [ "CreateVPC", { "Ref" : "VPC"  }, { "Ref" : "VPCId"} ] },
				"AvailabilityZone" : { "Fn::Select" : [ 0, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
				"CidrBlock" : "172.16.1.0/24",
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "Subnet" ] ] } } ]
			}
		},
		"BackupSubnet" : {
			"Type" : "AWS::EC2::Subnet",
			"Condition" : "CreateBackupSubnet",
			"Properties" : {
				"VpcId" : { "Fn::If" : [ "CreateVPC", { "Ref" : "VPC"  }, { "Ref" : "VPCId"} ] },
				"AvailabilityZone" : { "Fn::Select" : [ 1, { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
				"CidrBlock" : "172.16.2.0/24",
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "BackupSubnet" ] ] } } ]
			}
		},
		"InternetGateway" : {
			"Type" : "AWS::EC2::InternetGateway",
			"Condition" : "CreateVPC",
			"Properties" : {
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "InternetGateway" ] ] } } ]
			}
		},
		"AttachGateway" : {
			"Type" : "AWS::EC2::VPCGatewayAttachment",
			"Condition" : "CreateVPC",
			"Properties" : {
				"VpcId" : { "Fn::If" : [ "CreateVPC", { "Ref" : "VPC"  }, { "Ref" : "VPCId"} ] },
				"InternetGatewayId" : { "Ref" : "InternetGateway" }
			}
		},
		"RouteTable" : {
			"Type" : "AWS::EC2::RouteTable",
			"Condition" : "CreateVPC",
			"Properties" : {
				"VpcId" : { "Fn::If" : [ "CreateVPC", { "Ref" : "VPC"  }, { "Ref" : "VPCId"} ] },
				"Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "RouteTable" ] ] } } ]
			}
		},
		"Route" : {
			"Type" : "AWS::EC2::Route",
			"Condition" : "CreateVPC",
			"DependsOn" : "AttachGateway",
			"Properties" : {
				"RouteTableId" : { "Ref" : "RouteTable" },
				"DestinationCidrBlock" : "0.0.0.0/0",
				"GatewayId" : { "Ref" : "InternetGateway" }
			}
		},
		"SubnetRouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Condition" : "CreateVPC",
			"Properties" : {
				"SubnetId" : { "Fn::If" : [ "CreateSubnet", { "Ref" : "Subnet"  }, { "Ref" : "SubnetId"} ] },
				"RouteTableId" : { "Ref" : "RouteTable" }
			}
		},
		"BackupSubnetRouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Condition" : "CreateVPC",
			"Properties" : {
				"SubnetId" : { "Fn::If" : [ "CreateSubnet", { "Ref" : "BackupSubnet"  }, { "Ref" : "BackupSubnetId"} ] },
				"RouteTableId" : { "Ref" : "RouteTable" }
			}
		},
		"PostgreRDS" : {
			"Type" : "AWS::RDS::DBInstance",
			"Properties" : {
				"AllocatedStorage" : "50",
				"DBInstanceClass" : { "Ref" : "RDSInstanceType"},
				"Engine" : "postgres",
				"DBName" : "rdsredborder",
				"MasterUsername" : "rdsredborder",
				"MasterUserPassword" : "probandoredborderng",
				"PubliclyAccessible" : "false",
				"BackupRetentionPeriod" : "7",
				"MultiAZ" : "false",
				"StorageType" : "gp2",
				"DBSubnetGroupName" : { "Ref" : "RDSSubnetGroup" },
				"VPCSecurityGroups" : [ { "Ref" : "RDSSecurityGroup" } ],
				"DBParameterGroupName" : { "Ref" : "RDSParameterGroup" }
			}
		},
		"RDSParameterGroup" : {
			"Type" : "AWS::RDS::DBParameterGroup",
			"Properties" : {
				"Description" : "Allow lots of connections do database",
				"Family" : "postgres9.5",
				"Parameters" : {
					"max_connections" : "10000"
				}
			}
		},
		"RDSSubnetGroup" : {
			"Type" : "AWS::RDS::DBSubnetGroup",
			"Properties" : {
				"DBSubnetGroupDescription" : "redBorder RDS subnet group",
				"SubnetIds" : [ { "Fn::If" : [ "CreateSubnet", { "Ref" : "Subnet"  }, { "Ref" : "SubnetId"} ] }, { "Fn::If" : [ "CreateBackupSubnet", { "Ref" : "BackupSubnet"  }, { "Ref" : "BackupSubnetId"} ] } ]
			}
		},
		"RDSSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Enable access to DataBase for VPC instances",
				"VpcId" : { "Fn::If" : [ "CreateVPC", { "Ref" : "VPC"  }, { "Ref" : "VPCId"} ] },
				"SecurityGroupIngress" : [ {
					"IpProtocol" : "tcp",
					"FromPort" : "5432",
					"ToPort" : "5432",
					"CidrIp" : "172.16.0.0/16"
				} ],
				"Tags" : [ {
					"Key" : "Cluster",
					"Value" : { "Ref" : "AWS::StackName" }
				} ]
			}
		},

		"S3Bucket": {
			"Type" : "AWS::S3::Bucket",
			"Properties" : {
				"AccessControl" : "Private"
			}
		},
		"IAMRole" : {
			"Type" : "AWS::IAM::Role",
			"Properties" : {
				"AssumeRolePolicyDocument" : {
					"Version" : "2012-10-17",
					"Statement" : [ {
						"Effect" : "Allow",
						"Principal" : {
							"Service" : [ "ec2.amazonaws.com" ]
						},
						"Action" : [ "sts:AssumeRole" ]
 					} ]
				},
				"ManagedPolicyArns" : [ { "Ref" : "S3IAMPolicy" } ],
				"Path" : "/"
			}
		},
		"IAMInstanceProfile" : {
			"Type" : "AWS::IAM::InstanceProfile",
			"Properties" : {
				"Path" : "/",
				"Roles" : [ { "Ref" : "IAMRole" } ]
			}
		},
		"S3IAMPolicy" : {
			"Type" : "AWS::IAM::ManagedPolicy",
			"Properties" : {
				"PolicyDocument" : {
					"Version" : "2012-10-17",
					"Statement" : [ {
						"Action" : "s3:*",
						"Effect" : "Allow",
						"Resource" : [ 	{ "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref" : "S3Bucket" } ] ] },
										{ "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref" : "S3Bucket" }, "/*" ] ] }
						]
					} ]
				}
			}
		},
		"S3IAMUser" : {
			"Type" : "AWS::IAM::User",
			"Properties" : {
				"ManagedPolicyArns" : [ { "Ref" : "S3IAMPolicy" } ]
			}
		},
		"S3IAMAccessKey" : {
			"Type" : "AWS::IAM::AccessKey",
			"Properties" : {
				"Status" : "Active",
				"UserName" : { "Ref" : "S3IAMUser" }
			}
		},

		"SecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"GroupDescription" : "Security group for redBorder bond1 interfaces (private interfaces)",
				"VpcId" : { "Ref" : "VPC" },
				"SecurityGroupIngress" : [ {
					"CidrIp" : "0.0.0.0/0",
					"FromPort" : "22",
					"ToPort" : "22",
					"IpProtocol" : "tcp"
				}, {
					"CidrIp" : "0.0.0.0/0",
					"FromPort" : "8500",
					"ToPort" : "8500",
					"IpProtocol" : "tcp"
				} ],
				"Tags" : [ {
					"Key" : "Cluster",
					"Value" : { "Ref" : "AWS::StackName" }
				}, {
					"Key" : "Name",
					"Value" : { "Fn::Join" : [ "", [
						{ "Ref" : "AWS::StackName" }, " - rBPrivateSG" ] ] }
				} ]
			}
		},
		"SecurityGroupIngress" : {
			"Type" : "AWS::EC2::SecurityGroupIngress",
			"Properties" : {
				"GroupId" : { "Ref" : "SecurityGroup" },
				"IpProtocol" : "-1",
				"FromPort" : "-1",
				"ToPort" : "-1",
				"SourceSecurityGroupId" : { "Ref" : "SecurityGroup" }
			}
		},
		"ChefLaunchConfiguration" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"Properties" : {
				"AssociatePublicIpAddress" : "true",
				"ImageId" : { "Ref" : "AMI" },
				"InstanceType" : { "Ref" : "InstanceType" },
				"InstanceMonitoring" : "false",
				"IamInstanceProfile" : { "Ref" : "IAMInstanceProfile" },
				"KeyName" : { "Ref" : "KeyName" },
				"SecurityGroups" : [ { "Ref" : "SecurityGroup" } ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#cloud-config\n",
					"write_files:\n",
					"  - path: /var/lib/cloud/instance/user-data-config.yml\n",
					"    content: |\n",
					"      #HERE YOU MUST SPECIFY USER-DATA PARAMETERS IN YAML FORMAT\n",
					"\n",
					"      mode: chef\n",
					"      sync_net: ", "172.16.1.0/24", "\n",
					"      cdomain: ", { "Ref" : "CDomain" }, "\n",
					"      s3_bucket: ", { "Ref" : "S3Bucket" }, "\n",
					"      s3_endpoint: ", { "Fn::Join" : [ "" , [ "s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com\n" ] ] }, "\n",
					"      aws_access_key: ", { "Ref" : "S3IAMAccessKey" }, "\n",
					"      aws_secret_key: ", { "Fn::GetAtt" : [ "S3IAMAccessKey", "SecretAccessKey" ] }, "\n",
					"      sql_host: ", { "Fn::GetAtt" : [ "PostgreRDS", "Endpoint.Address" ] }, "\n",
					"      sql_port: ", { "Fn::GetAtt" : [ "PostgreRDS", "Endpoint.Port" ] }, "\n",
					"      sql_superuser: ", "rdsredborder", "\n",
					"      sql_password: ", "probandoredborderng", "\n",
					"\n",
					"      #END OF PARAMETER SPECIFICATION\n",
					"\n",
					"runcmd:\n",
					" - /usr/lib/redborder/bin/rb_cloud_init.sh\n",
					"\n",
					"# vim: syntax=yaml\n",
					"#\n",
					"# Install epel-release repository\n",
					"#package_upgrade: true\n",
					"packages:\n",
					" - epel-release\n",
					" - redborder-manager\n",
					"# Add redborder yum repository configuration to the system\n",
					"yum_repos:\n",
					"    redborder-repo:\n",
					"        baseurl: http://repo.redborder.com/\n",
					"        enabled: true\n",
					"        gpgcheck: false\n",
					"        sslcheck: false\n",
					"        name: redborder-repo\n",
					"    epel:\n",
					"        name: Extra Packages for Enterprise Linux 7 - $basearch\n",
					"        baseurl: http://download.fedoraproject.org/pub/epel/7/$basearch\n",
					"        failovermethod: priority\n",
					"        enabled: true\n",
					"        gpgcheck: false\n"
				] ] } }
			}
		},
		"ChefAutoscalingGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"Properties" : {
				"MinSize" : { "Ref" : "ChefInstances" },
				"MaxSize" : "5",
				"LaunchConfigurationName" : { "Ref" : "ChefLaunchConfiguration" },
				"VPCZoneIdentifier" : [ { "Ref" : "Subnet" } ],
				"Tags" : [ {
					"Key" : "Role",
					"Value" : "chef",
					"PropagateAtLaunch" : "true"
				},{
					"Key" : "Cluster",
					"Value" : { "Ref" : "AWS::StackName" },
					"PropagateAtLaunch" : "true"
				},{
					"Key" : "Name",
					"Value" : { "Fn::Join" : [ "", [
						{ "Ref" : "AWS::StackName" }, " - chef" ] ] },
					"PropagateAtLaunch" : "true"
				} ]
			}
		},
		"CoreLaunchConfiguration" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"Properties" : {
				"AssociatePublicIpAddress" : "true",
				"ImageId" : { "Ref" : "AMI" },
				"InstanceType" : { "Ref" : "InstanceType" },
				"InstanceMonitoring" : "false",
				"IamInstanceProfile" : { "Ref" : "IAMInstanceProfile" },
				"KeyName" : { "Ref" : "KeyName" },
				"SecurityGroups" : [ { "Ref" : "SecurityGroup" } ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#cloud-config\n",
					"write_files:\n",
					"  - path: /var/lib/cloud/instance/user-data-config.yml\n",
					"    content: |\n",
					"      #HERE YOU MUST SPECIFY USER-DATA PARAMETERS IN YAML FORMAT\n",
					"\n",
					"      mode: core\n",
					"      sync_net: ", "172.16.1.0/24", "\n",
					"      cdomain: ", { "Ref" : "CDomain" }, "\n",
					"      s3_bucket: ", { "Ref" : "S3Bucket" }, "\n",
					"      s3_endpoint: ", { "Fn::Join" : [ "" , [ "s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com\n" ] ] }, "\n",
					"      aws_access_key: ", { "Ref" : "S3IAMAccessKey" }, "\n",
					"      aws_secret_key: ", { "Fn::GetAtt" : [ "S3IAMAccessKey", "SecretAccessKey" ] }, "\n",
					"      sql_host: ", { "Fn::GetAtt" : [ "PostgreRDS", "Endpoint.Address" ] }, "\n",
					"      sql_port: ", { "Fn::GetAtt" : [ "PostgreRDS", "Endpoint.Port" ] }, "\n",
					"      sql_superuser: ", "rdsredborder", "\n",
					"      sql_password: ", "probandoredborderng", "\n",
					"\n",
					"      #END OF PARAMETER SPECIFICATION\n",
					"\n",
					"runcmd:\n",
					" - /usr/lib/redborder/bin/rb_cloud_init.sh\n",
					"\n",
					"# vim: syntax=yaml\n",
					"#\n",
					"# Install epel-release repository\n",
					"#package_upgrade: true\n",
					"packages:\n",
					" - epel-release\n",
					" - redborder-manager\n",
					"# Add redborder yum repository configuration to the system\n",
					"yum_repos:\n",
					"    redborder-repo:\n",
					"        baseurl: http://repo.redborder.com/\n",
					"        enabled: true\n",
					"        gpgcheck: false\n",
					"        sslcheck: false\n",
					"        name: redborder-repo\n",
					"    epel:\n",
					"        name: Extra Packages for Enterprise Linux 7 - $basearch\n",
					"        baseurl: http://download.fedoraproject.org/pub/epel/7/$basearch\n",
					"        failovermethod: priority\n",
					"        enabled: true\n",
					"        gpgcheck: false\n"
				] ] } }
			}
		},
		"CoreAutoscalingGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"Properties" : {
				"MinSize" : { "Ref" : "CoreInstances" },
				"MaxSize" : { "Ref" : "CoreInstances" },
				"LaunchConfigurationName" : { "Ref" : "CoreLaunchConfiguration" },
				"VPCZoneIdentifier" : [ { "Ref" : "Subnet" } ],
				"Tags" : [ {
					"Key" : "Role",
					"Value" : "core",
					"PropagateAtLaunch" : "true"
				},{
					"Key" : "Cluster",
					"Value" : { "Ref" : "AWS::StackName" },
					"PropagateAtLaunch" : "true"
				},{
					"Key" : "Name",
					"Value" : { "Fn::Join" : [ "", [
						{ "Ref" : "AWS::StackName" }, " - core" ] ] },
					"PropagateAtLaunch" : "true"
				} ]
			}
		},
		"KafkaLaunchConfiguration" : {
			"Type" : "AWS::AutoScaling::LaunchConfiguration",
			"Properties" : {
				"AssociatePublicIpAddress" : "true",
				"ImageId" : { "Ref" : "AMI" },
				"InstanceType" : { "Ref" : "InstanceType" },
				"InstanceMonitoring" : "false",
				"IamInstanceProfile" : { "Ref" : "IAMInstanceProfile" },
				"KeyName" : { "Ref" : "KeyName" },
				"SecurityGroups" : [ { "Ref" : "SecurityGroup" } ],
				"UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
					"#cloud-config\n",
					"write_files:\n",
					"  - path: /var/lib/cloud/instance/user-data-config.yml\n",
					"    content: |\n",
					"      #HERE YOU MUST SPECIFY USER-DATA PARAMETERS IN YAML FORMAT\n",
					"\n",
					"      mode: kafka\n",
					"      sync_net: ", "172.16.1.0/24", "\n",
					"      cdomain: ", { "Ref" : "CDomain" }, "\n",
					"      s3_bucket: ", { "Ref" : "S3Bucket" }, "\n",
					"      s3_endpoint: ", { "Fn::Join" : [ "" , [ "s3-", { "Ref" : "AWS::Region" }, ".amazonaws.com\n" ] ] }, "\n",
					"      aws_access_key: ", { "Ref" : "S3IAMAccessKey" }, "\n",
					"      aws_secret_key: ", { "Fn::GetAtt" : [ "S3IAMAccessKey", "SecretAccessKey" ] }, "\n",
					"      sql_host: ", { "Fn::GetAtt" : [ "PostgreRDS", "Endpoint.Address" ] }, "\n",
					"      sql_port: ", { "Fn::GetAtt" : [ "PostgreRDS", "Endpoint.Port" ] }, "\n",
					"      sql_superuser: ", "rdsredborder", "\n",
					"      sql_password: ", "probandoredborderng", "\n",
					"\n",
					"      #END OF PARAMETER SPECIFICATION\n",
					"\n",
					"runcmd:\n",
					" - /usr/lib/redborder/bin/rb_cloud_init.sh\n",
					"\n",
					"# vim: syntax=yaml\n",
					"#\n",
					"# Install epel-release repository\n",
					"#package_upgrade: true\n",
					"packages:\n",
					" - epel-release\n",
					" - redborder-manager\n",
					"# Add redborder yum repository configuration to the system\n",
					"yum_repos:\n",
					"    redborder-repo:\n",
					"        baseurl: http://repo.redborder.com/\n",
					"        enabled: true\n",
					"        gpgcheck: false\n",
					"        sslcheck: false\n",
					"        name: redborder-repo\n",
					"    epel:\n",
					"        name: Extra Packages for Enterprise Linux 7 - $basearch\n",
					"        baseurl: http://download.fedoraproject.org/pub/epel/7/$basearch\n",
					"        failovermethod: priority\n",
					"        enabled: true\n",
					"        gpgcheck: false\n"
				] ] } }
			}
		},
		"KafkaAutoscalingGroup" : {
			"Type" : "AWS::AutoScaling::AutoScalingGroup",
			"Properties" : {
				"MinSize" : { "Ref" : "KafkaInstances" },
				"MaxSize" : "5",
				"LaunchConfigurationName" : { "Ref" : "KafkaLaunchConfiguration" },
				"VPCZoneIdentifier" : [ { "Ref" : "Subnet" } ],
				"Tags" : [ {
					"Key" : "Role",
					"Value" : "kafka",
					"PropagateAtLaunch" : "true"
				},{
					"Key" : "Cluster",
					"Value" : { "Ref" : "AWS::StackName" },
					"PropagateAtLaunch" : "true"
				},{
					"Key" : "Name",
					"Value" : { "Fn::Join" : [ "", [
						{ "Ref" : "AWS::StackName" }, " - kafka" ] ] },
					"PropagateAtLaunch" : "true"
				} ]
			}
		}
	}
}
